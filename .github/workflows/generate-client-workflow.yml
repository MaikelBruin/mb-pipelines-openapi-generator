name: OpenAPI Client Generation and Deploy workflow

on:
  workflow_call:
    inputs:
      openapi_spec_path:
        required: true
        type: string
      app_name:
        required: true
        type: string
      package_name:
        required: true
        type: string
      package_version:
        required: true
        type: string

jobs:
  set-variables:
    runs-on: ubuntu-latest
    outputs:
      generator_version: ${{ steps.set-vars.outputs.generator_version }}
      template_dir: ${{ steps.set-vars.outputs.template_dir }}
      output_dir: ${{ steps.set-vars.outputs.output_dir }}
      config_file: ${{ steps.set-vars.outputs.config_file }}
    steps:
      - name: Set up workflow variables
        id: set-vars
        run: |
          echo "generator_version=7.15.0" >> $GITHUB_OUTPUT
          echo "output_dir=target/generated-client" >> $GITHUB_OUTPUT
          echo "config_file=supporting-files/generator-configs/java-jersey3.yaml" >> $GITHUB_OUTPUT
          echo "template_dir=supporting-files/generator-templates/java/jersey3" >> $GITHUB_OUTPUT

  generate-client:
    needs: set-variables
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Generate Java Jersey3 client
        run: |
          pwd
          ls
          docker run --rm -v "${{ github.workspace }}:/local" \
            openapitools/openapi-generator-cli:v${{ needs.set-variables.outputs.generator_version }} \
            generate \
            -i /local/${{ inputs.openapi_spec_path }} \
            --template-dir /local/${{ needs.set-variables.outputs.template_dir }} \
            -c /local/${{ needs.set-variables.outputs.config_file }} \
            -o /local/${{ needs.set-variables.outputs.output_dir }} \
            --invoker-package mb.demos.openapi.generated.api.client.${{ inputs.package_name }}.client \
            --api-package mb.demos.openapi.generated.api.client.${{ inputs.package_name }}.api \
            --model-package mb.demos.openapi.generated.api.client.${{ inputs.package_name }}.model \
            --additional-properties=artifactId=${{ inputs.app_name }},artifactVersion=${{ inputs.package_version }}

      - name: Upload generated client code
        uses: actions/upload-artifact@v4
        with:
          name: generated-client-code-${{ inputs.app_name }}
          path: ${{ needs.set-variables.outputs.output_dir }}

  package-client:
    needs: generate-client
    runs-on: ubuntu-latest
    steps:
      - name: Download generated client code
        uses: actions/download-artifact@v4
        with:
          name: generated-client-code-${{ inputs.app_name }}
      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Package client using Maven
        run: |
          mvn clean package
      - name: Upload jar
        uses: actions/upload-artifact@v4
        with:
          name: generated-client-jar-${{ inputs.app_name }}
          path: target/*.jar

  #this job can be combined with package job but deploy requires authentication so its splitted here
  deploy-client:
    needs: package-client
    runs-on: ubuntu-latest
    steps:
      - name: Download generated client code
        uses: actions/download-artifact@v4
        with:
          name: generated-client-code-${{ inputs.app_name }}
      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
        #please note that the deployment configuration is set in the pom.mustache template
      - name: Deploy artifact to maven repository
        run: |
          mvn clean package deploy -Dusername=$GITHUB_USER -Dpassword=$GITHUB_TOKEN
        env:
          GITHUB_USER: ${{ github.actor }}
          GITHUB_TOKEN: ${{ secrets.MB_PAT }}

